stages:
  - build
  - test
  - deploy_staging
  - deploy_production

variables:
  IMAGE_BASE: registry.gitlab.com/danbadge/node-api
  PIPELINE_IMAGE_NAME: $IMAGE_BASE:$CI_BUILD_REF

build:
  image: docker:git
  services:
  - docker:dind
  stage: build
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
  script:
    - docker build -t $PIPELINE_IMAGE_NAME .
    - docker push $PIPELINE_IMAGE_NAME

test1:
  image: docker:git
  services:
  - docker:dind
  stage: test
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
  script:
    - docker run $PIPELINE_IMAGE_NAME npm test

driftrock_staging:
  image: driftrock/heroku-cli:shell
  stage: deploy_staging
  environment:
    name: driftrock_staging
    url: https://node-api-staging.herokuapp.com/
  variables:
    HEROKU_APP_NAME: node-api-staging
  script:
    - ./scripts/heroku_deploy.sh
  only:
    - master

smartfocus_staging:
  image: driftrock/heroku-cli:shell
  stage: deploy_staging
  environment:
    name: smarfocus_staging
    url: https://node-api-staging.herokuapp.com/
  variables:
    HEROKU_APP_NAME: node-api-staging
  script:
    - ./scripts/heroku_deploy.sh
  when: manual
  only:
    - master

driftrock_production:
  image: driftrock/heroku-cli:shell
  stage: deploy_production
  environment:
    name: driftrock_production
    url: https://node-api-production.herokuapp.com/
  variables:
    HEROKU_APP_NAME: node-api-production
  script:
    - ./scripts/heroku_deploy.sh
  when: manual
  only:
    - master
  dependencies:
    - driftrock_staging

smartfocus_production:
  image: driftrock/heroku-cli:shell
  stage: deploy_production
  environment:
    name: smartfocus_production
    url: https://node-api-production.herokuapp.com/
  variables:
    HEROKU_APP_NAME: node-api-production
  script:
    - ./scripts/heroku_deploy.sh
  when: manual
  only:
    - master
  dependencies:
    - smartfocus_staging
